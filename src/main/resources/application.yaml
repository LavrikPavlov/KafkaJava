server:
  port: 8080

spring:
  application:
    name: kazan_database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/kazan_database
    username: postgres
    password: postgres

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092


    producer:
      topics:
        topic-name: person_topic
        partitions: 1
        replicas: 1
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      acks: all
#      retries: 2


    consumer:
      topics:
        service: from_other_service
      group-id: other_service
      types:
        new-person: spring.json.value.default.type=ru.kazan.kafkameetup.dto.PersonDTO
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            value:
              trusted:
                packages: "*"